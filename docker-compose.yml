version: '2'

services:
    app:
        container_name: app
        build: ./webrecorder
        command: ulimit -n 65536; uwsgi --need-app /code/apps/apiapp.ini

        env_file:
            - ./wr.env

        depends_on:
            - warcserver
            - recorder
            - redis
            - shepherd
            - dat

        volumes:
            - ./webrecorder/:/code/
            - ./data:/data

        networks:
            - default
            - browsers

        ulimits: { nofile: 65536 }

    frontend:
        container_name: frontend
        build:
            context: ./frontend

        env_file:
            - ./wr.env

        command: sh run.sh

        depends_on:
            - app

        volumes:
            - ./frontend/:/code/
            - /code/node_modules

        ports:
            - 8096:8096 # for HMR on dev

    dat:
        container_name: dat
        image: webrecorder/dat-share
        environment:
            - PORT=3282
            - ROOT_DIR=/data/storage

        ports:
            - "3282:3282/tcp"
            - "3282:3282/udp"

        volumes:
            - ./data:/data
            - ./data/dat/secret_keys:/root/.dat/secret_keys

    recorder:
        container_name: recorder
        build: ./webrecorder
        command: ulimit -n 65536; uwsgi --need-app /code/apps/rec.ini

        env_file:
            - ./wr.env

        depends_on:
            - warcserver
            - redis

        volumes:
            - ./webrecorder/:/code/
            - ./data:/data

        ulimits: { nofile: 65536 }

    warcserver:
        container_name: warcserver
        build: ./webrecorder
        command: ulimit -n 65536; uwsgi --need-app /code/apps/load.ini

        env_file:
            - ./wr.env

        depends_on:
            - redis

        volumes:
            - ./webrecorder/:/code/
            - ./data:/data

        ulimits: { nofile: 65536 }

    nginx:
        container_name: nginx
        build: ./nginx
        image: webrecorder/nginx
        depends_on:
            - app
            - frontend
            - behaviors

        volumes:
            - ./data:/data
            - ./webrecorder/:/code/
            - ./frontend/:/frontend/

        ports:
            - 8089:80
            - 8092:81

    behaviors:
        container_name: behaviors
        image: "webrecorder/behaviors:latest"

    coturn:
        container_name: coturn
        image: oldwebtoday/coturn:1.0
        ports:
            - "33478:33478/tcp"
            - "33478:33478/udp"

        networks:
            - browsers

        env_file:
            - ./wr.env

    shepherd:
        container_name: shepherd
        image: oldwebtoday/shepherd:1.2.0

        env_file:
            - ./wr.env

        environment:
            - SCREEN_WIDTH=1280
            - SCREEN_HEIGHT=800

            - PROXY_HOST=app
            - PROXY_PORT=8088
            - PROXY_GET_CA=http://wsgiprox/download/pem

            - CONTAINER_EXPIRE_SECS=3600
            - IDLE_TIMEOUT=5

            - BROWSER_NET=webrecorder_browsers
            - MAIN_NET=webrecorder_default

        ports:
            - 9020:9020

        depends_on:
            - redis

        volumes:
            - ./webrecorder/webrecorder/config/auto-headless.yaml:/app/flocks/auto-headless.yaml
            - ./webrecorder/webrecorder/config/pool_config.yaml:/app/pool_config.yaml
            - /var/run/docker.sock:/var/run/docker.sock

    browsertrix:
        container_name: browsertrix
        image: webrecorder/browsertrix:0.2.0
        #build:
        #    context: .
        environment:
            - REDIS_URL=redis://redis/0
            - DEFAULT_POOL=auto-pool
            - DEFAULT_FLOCK=auto-headless
            - SCREENSHOT_API_URL=http://app:8088/api/v1/remote/put-record
            - EXTRACTED_RAW_DOM_API_URL=http://app:8088/api/v1/remote/put-record
            - PROXY_HOST=app
            - PROXY_PORT=8088

        depends_on:
            - redis
            - app

        ports:
            - 8000:8000

    solr:
        container_name: solr
        image: solr

        volumes:
          - ./data/solr:/var/solr

        entrypoint:
          - docker-entrypoint.sh
          - solr-precreate
          - webrecorder

        ports:
          - 8983:8983

    redis:
        container_name: redis
        build: ./redis

        env_file:
            - ./wr.env

        volumes:
            - ./data:/data

    # Postfix (if sending mail locally)
    mailserver:
        container_name: mailserver
        restart: always
        image: catatnight/postfix

        environment:
            - "maildomain=localhost"
            - "smtp_user=test:archive"


networks:
    default:
        driver: bridge


    browsers:
        driver: bridge

