@import 'src/vars';

.add-to-lists-modal {
    width: 30vw;
    max-width: 45rem;

    h4 {
        margin: 0;
    }

    ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
        width: 100%;

        li {
            label {
                margin-left: 1rem;
            }
        }
    }
}

.wr-delete-modal {
    label {
        display: block;
        margin-top: 2.5rem;
    }

    input {
        width: 100%;
    }
}

.table-header-modal {
    max-width: 30vw;

    ul {
        padding: 0;
        margin: 0;

        li {
            list-style-type: none;
            text-transform: uppercase;

            input {
                margin-right: 1rem;
            }
        }
    }
}

.wr-coll-detail {
    padding: 0rem .5rem 0 0;
    flex-grow: 1;
    // position: absolute;
    // top:0;
    // bottom:0;
    // height: calc(100vh - 2.2rem);
    width: 100%;

    display: grid;
    grid-template-rows: auto 3.5rem 1fr;
    grid-template-columns: auto 1fr;
    grid-column-gap: 1.5rem;
    grid-template-areas:
        "header header"
        "sidebar utilities"
        "sidebar table";

    font-family: $sans;

    &.with-list {
        grid-template-areas:
            "sidebar header"
            "sidebar utilities"
            "sidebar table";

        .wr-coll-detail-table .ReactVirtualized__Table__headerColumn > div {
            background: $listsYellow;
        }
    }

    .wr-sidebar {
        grid-area: sidebar;
        padding: 0;

        .wr-sidebar-stretch {
            padding: 0;
        }
    }

    .wr-coll-utilities {
        grid-area: utilities;

        nav {
            display: flex;
            justify-content: flex-start;
            align-items: center;

            & > * {
                margin-right: 2.5rem;

                &.glyphicon {
                    font-size: 1.8rem;
                }
            }

            .search-box {
                width: 50%;
                max-width: 35rem;
                min-width: 15rem;
            }

            .query-box {
                width: 40%;
                max-width: 35rem;
                min-width: 20rem;

                .input-group-addon {
                    background: none;
                }
            }
        }
    }

    .wr-coll-detail-table {
        grid-area: table;
        position: relative;
        padding-right: 1.5rem;

        .table-header-menu {
            position: absolute;
            right: -.5rem;
            top: 0.25rem;
        }

        .ReactVirtualized__Table__headerRow {
            //margin-bottom: 1.5rem;
        }

        .ReactVirtualized__Table__headerColumn {
            height: 100%;

            &:first-of-type {
                margin-left: 0;
            }
            &:last-of-type {
                margin-right: 0;
            }

            & > div{
                display: flex;
                align-items: center;
                background: $tableHeaderBg;
                padding: 0 .5rem;
                width: 100%;
                height: 100%;
            }
        }

        .ReactVirtualized__Table__row {
            transition: background $tableRowFade ease-in-out,
                        color $tableRowFade ease-in-out,
                        fill $tableRowFade ease-in-out;
            cursor: context-menu;
            font-size: 1.2rem;
            position: relative;
            padding-left: .75rem;

            &:before {
                transition: background-color $quickShift ease-in-out;
                position: absolute;
                left: 0;
                content: '';
                width: .75rem;
                height: 100%;
            }

            &:focus {
                outline: none;
            }

            &.odd {
                background-color: $table-zebra;
            }

            .page-title {
                font-size: 1.6rem;
            }

            svg {
                & > g {
                    transition: fill $tableRowFade ease-in-out;
                }
            }

            &:hover {
                &:not(.selected){
                    &:before {
                        background: $tr-selected;
                    }
                }

                &.selected {
                    &:before {
                        background: $tr-highlight-selected;
                    }
                }
            }

            &.selected {
                background-color: $blue;
                color: #FFF;
                fill: #FFF;

                a:link { color: #FFF; }
                a:visited{ color: #FFF; }

                svg {
                    & > g {
                        fill: #FFF;
                    }
                }
            }

            // &:not(.selected):hover {
            //     background: $blue;
            // }

            .ReactVirtualized__Table__rowColumn {
                a {
                    display: inline-block;
                    padding: 1rem;
                }
            }
        }
    }
}