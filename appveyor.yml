branches:
  only:
    - develop

environment:
  matrix:
    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"

install:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - "pip install --disable-pip-version-check --user --upgrade pip"
  - "pip install pyinstaller"
  - ps: "cd webrecorder"
  - "python setup.py install"

build_script:
  # Build the compiled extension

  # - "%CMD_IN_ENV% python setup.py build"

test_script:
  # Run the project tests
  # - "%CMD_IN_ENV% python setup.py nosetests"

after_test:
  # If tests are successful, create binary packages for the project.
  # - ps: "ls dist"

# artifacts:
#   # Archive the generated packages in the ci.appveyor.com build report.
#   - path: dist\*
